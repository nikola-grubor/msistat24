---
title: "Mere centralne tendencije"
date: last-modified
author: "Dr Nikola Grubor"
# institute: "Institut za Medicinsku Statistiku i Informatiku"
logo: "slike/logo.png"
lang: sr-Latn

# format:
#   revealjs:
#     slide-number: true
#     show-slide-number: speaker
#     theme: [default, custom.scss]
# 
# revealjs-plugins:
#   - revealjs-text-resizer
---

```{r}
library(glue)
library(here)
library(tidyverse)
library(tinytable)
library(gtsummary)
library(gganimate)
library(patchwork)
source(file = here("slides", "theme", "ggthemes.R"))
```

# Relativni brojevi (koeficijenti)

## Koeficijenti strukture

```{r}
kreveti <- tribble(
  ~Jedinica, ~`Bolnica A`, ~`Bolnica B`,
  "Interno", 70, 80,
  "Ginekološko", 40, 140,
  "Hirurško", 80, 100,
  "Pedijatrijsko", 50, 160) %>% 
  mutate(Ukupno = `Bolnica A` + `Bolnica B`) %>%
  add_row(tibble(Jedinica = "Ukupno", `Bolnica A` = sum(.$`Bolnica A`), 
                 `Bolnica B` = sum(.$`Bolnica B`),
                 Ukupno = sum(.$Ukupno)))

tt(kreveti) %>%
  style_tt(fontsize = 1)
```

## Struktura postelja na odeljenjima?

```{r}
  
tt(kreveti) %>% 
  style_tt(i = 1, j = c(2, 4), color = "#F4BA02", bold = TRUE) %>%
  style_tt(fontsize = 1)
```

$$ \frac{70}{150} \times 100 = 47 \% $$ 

## Struktura odeljenja u bolnicama?

```{r}
tt(kreveti) %>% 
  style_tt(i = c(1, 5), j = 2, color = "#F4BA02", bold = TRUE) %>%
  style_tt(fontsize = 1)
```

$$ \frac{70}{240} \times 100 = 29 \% $$ 

## Struktura postelja po odeljenjima i bolnicama?

```{r}
tt(kreveti) %>% 
  style_tt(i = c(1), j = c(2), color = "#F4BA02", bold = TRUE) %>%
  style_tt(i = c(5), j = c(4), color = "#F4BA02", bold = TRUE) %>%
  style_tt(fontsize = 0.85)
```

$$ \frac{70}{720} \times 100 = 10 \% $$ 

## Relativni brojevi za vremenske serije

Indeksi dinamike

- Bazni
- Lančani

## Praćenje LDL odgovora na statin (1)

```{r}
#| fig-asp: 0.618
#| fig-align: "center"

lipid <- tribble(
  ~ID, ~Mesec, ~LDL,
  1, 1, 5.2,
  1, 2, 5.6,
  1, 6, 5.4,
  1, 12, 5.1,
  2, 1, 5.2,
  2, 2, 3.64,
  2, 6, 3.43,
  2, 12, 3.7
) %>%
  group_by(ID) %>% 
  mutate(BI = round( LDL / 5.2 * 100, 1 ),
         BI = ifelse(BI == 100, NA, paste(BI, "%")))

ggplot(lipid, aes( x = Mesec, y = LDL, group = ID, color = factor(ID))) +
  geom_line(linewidth = 2) +
  geom_point(size = 4) +
  geom_hline(yintercept = 4.9, linetype = "dashed", color = "#F7F8F9") +
  annotate("text", label = "Visoko rizičan", x = 11, y = 4.7, col = "#F7F8F9",
           size = 5) +
  ylim(0, 6) +
  theme(panel.grid.minor.y = element_line(),
        legend.position = "none") +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue() +
  labs(color = "Pacijent",
       y = "LDL mmol/L")
```

## Bazni indeks dinamike

$$ \frac{3.64}{5.2} \times 100 = 70 \% $$
$$ \frac{3.42}{5.2} \times 100 = 66 \% $$

$$ \frac{3.3.70}{5.2} \times 100 = 71 \% $$

Bazni indeks dinamike ima uvek [istu osnovu]{.yellow}.

## Praćenje LDL odgovora na statin (2)

```{r}
#| fig-asp: 0.618
#| fig-align: "center"

ggplot(lipid, aes( x = Mesec, y = LDL, group = ID, color = factor(ID))) +
  geom_line(linewidth = 2) +
  geom_point(size = 4) +
  geom_hline(yintercept = 4.9, linetype = "dashed", color = "#F7F8F9") +
  annotate("text", label = "Visoko rizičan", x = 11, y = 4.7, col = "#F7F8F9",
           size = 4) +
  ggrepel::geom_label_repel(aes(label = BI),
                            box.padding = 0.35,
                            point.padding = 0.5,
                            segment.color = "#F7F8F9",
                            seed = 123) +
  ylim(0, 6) +
  theme(panel.grid.major.y = element_line(),
        legend.position = "none") +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue() +
  theme(legend.position = "none") +
  labs(color = "Pacijent",
       y = "LDL mmol/L")
```

## Površina infarktnog polja miokarda

```{r}
#| fig-asp: 0.618
#| fig-align: "center"

myocard <- tribble(
  ~ID, ~Sati, ~trop,
  1, 0, 0.3,
  1, 24, 0.8,
  1, 48, 0.3,
  1, 72, 0.3,
  1, 96, 0.7
) %>%
  mutate(LI = round( trop / lag(trop) * 100, 1 ),
         LI = ifelse(Sati == 0, NA, paste(LI, "%")))

ggplot(myocard, aes( x = Sati, y = trop)) +
  geom_line(linewidth = 2, col = "#F4BA02") +
  geom_point(size = 4, col = "#F4BA02") +
  geom_hline(yintercept = 0.04, linetype = "dashed", color = "#F7F8F9") +
  annotate("text", label = "Visoko rizičan", x = 11, y = 4.7, col = "#F7F8F9",
           size = 4) +
  ylim(0, 1) +
  scale_x_continuous(breaks = c(0, 24, 48, 72, 96)) +
  ggrepel::geom_label_repel(aes(label = LI),
                            box.padding = 0.35,
                            point.padding = 0.5,
                            segment.color = "#F7F8F9",
                            seed = 123) +
  theme(panel.grid.major.y = element_line(),
        legend.position = "none") +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue() +
  labs(x = "Vreme (h)",
       y = "cTnI umcg/L")
```

## Lančani indeks dinamike {.smaller}

$$ \frac{0.8}{0.3} \times 100 = 266 \% $$

$$ \frac{0.3}{0.8} \times 100 = 37.5 \%, \; \text{u padu} $$

$$ \frac{0.3}{0.3} \times 100 = 100 \%, \; \text{u stabilan} $$

$$ \frac{0.7}{0.3} \times 100 = 233 \%, \; \text{u porastu} $$

Lančani indeks dinamike ima uvek [prethodnu osnovu]{.yellow}.

## Statistički koeficijenti

$$ \text{Natalitet} = \; N = \frac{R}{St} \times 1000 $$
$$ \text{Mortalitet} = \; M = \frac{U}{St} \times 1000 $$

$$ \text{Incidencija} = \; I = \frac{O_n}{St} \times 100,000 $$

$$ \text{Prevalencija} = \; P = \frac{O_u}{St} \times 1,000,000 $$

# Mere centralne tendencije

## Problem {.center}

::: {.r-fit-text}

Prijateljica ti kaže da se porodila u terminu.

Beba na porođaju ima [2.91 kg]{.yellow}. 

Rečeno joj je da je ovo ispod proseka, i sad je zabrinuta.

Da li je ovo [neobično]{.yellow} nisko? Kako definišemo [obično]{.yellow}?

:::

## Populacija težina neonatusa

Kako da opišemo [strukturu]{.yellow} ovih podataka?

::: {.r-stack}

```{r}
#| fig-asp: 0.618


bweight <- tibble( tezina = rnorm(1e6, 3480, 462) )

ggplot(bweight, aes( x = tezina )) +
  geom_histogram(binwidth = 500, color = "#F7F8F9", fill = "#F4BA02") +
  scale_x_continuous(breaks = c(2000, 3000, 4000, 5000)) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs(x = "Težina u gramima", y = "")
```

::: {.fragment}

```{r}
#| fig-asp: 0.618

ggplot(bweight, aes( x = tezina )) +
  geom_histogram(binwidth = 500, color = "#F7F8F9", fill = "#F4BA02") +
  geom_vline(xintercept = 2910, linetype = 2, col = "#F7F8F9",
             linewidth = 1.5) +
  scale_x_continuous(breaks = c(2000, 3000, 4000, 5000)) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs(x = "Težina u gramima", y = "")
```

:::

:::

## Šta je model?

:::: columns

::: {.column}

Namena statističkog modela je da najjednostavnije predstavi [stukturu]{.yellow} podataka.

::: {.callout-tip}
## Primer

Atlasi koje koristimo ne prikazuju anatomiju kako ona *zapravo* izgleda u prirodi. Napravljeni su tako da najjednostavnije prikažu tipične anatomske odnose.
:::

:::

::: {.column}

![](slike/cbd.png)

:::

::::

## Model je opis procesa

Može biti korisno razmišljati o statističkim modelima kao o [teorijama]{.yellow} kako nastaju opservacije (podaci).

::: {.callout-tip}
## Modeli nisu tačni

Poznati satističar Džordž Boks je izrekao citat: "Svi modeli su pogrešni, ali neki su korisni."

:::

[Cilj]{.yellow} je naći najefikasniji i najprecizniji način da se predstavi [mehanizam]{.yellow} kojim nastaju podaci.

## Šta je greška modela?

$$ \text{podaci} = \text{model} + \text{greška} $$

Preko modela možemo da dobijemo [predviđanja]{.yellow}.

$$  \text{model} = \widehat{\text{podaci}}  $$

[Greška]{.yellow} modela je razlika između predviđanja modela i stvarnih podataka.

$$ \text{greška}_i = \text{podaci}_i - \widehat{\text{podaci}} $$

::: notes
This expresses the idea that the data can be broken into two portions: one portion that is described by a statistical model, which expresses the values that we expect the data to take given our knowledge, and another portion that we refer to as the error that reflects the difference between the model’s predictions and the observed data.
:::

## Šta je "dobar" model?

Model koji [najmanje greši]{.yellow} je najbolji model.

$$ \text{greška}_i = \text{podaci}_i - \widehat{\text{podaci}} $$

## Šta je najbolji opis podataka

:::: columns

::: {.column}

Kako da odredimo vrednost koja najbolje predstavlja podatke?

- Mod
- Medijana
- Aritmetička sredina

:::

::: {.column}

![](slike/faces.jpg){width=70%}

:::

::::

::: notes
Kao kada biramo predsednika.
:::

<!-- Ove dve stavke mogu biti u konfliktu. -->

<!-- ## Primer generalizacije -->

<!-- ## Da li model može biti previše "dobar" -->

<!-- Model uči specifičnosti uzorka (šum). -->

## Mod

Najjednostavniji predstavnik podataka je najčešća vrednost, tzv. mod (tipična vrednost).

$$ 1,2,2,4,4,4,7,8,9,11,11 $$
$$ mod = 4 $$

::: {.callout-important}
Mod je jedina mera koja se može upotrebiti za nominalne podatke.
:::

## Unimodalna i bimodalna raspodela

```{r}
N <- 1000
unimod <- tibble( x = rnorm(n = N, mean = -8, sd = 1) )
bimod <- tibble( x = c(rnorm(n = N, mean = 1, sd = 1), 
                       rnorm(n = N, mean = 5, sd = 1)))

ggplot(data = unimod, aes( x = x)) +
  geom_histogram(fill = "tomato", color = "#F7F8F9") +
  geom_histogram(data = bimod, aes( x = x), fill = "#F4BA02", color = "#F7F8F9") +
  theme_blue_void()
  
```

::: {.center-h}
Gde su tipične vrednosti?
:::

## Prosek neonatalne težine {.smaller}

```{r}
#| fig-align: "center"
#| fig-asp: 0.618

ggplot(bweight, aes( x = tezina )) +
  geom_histogram(binwidth = 500, color = "#F7F8F9", fill = "#F4BA02") +
  geom_vline(xintercept = 2910, linetype = 2, col = "#F7F8F9",
             linewidth = 1.5) +
  geom_vline(xintercept = mean(bweight$tezina), linetype = 1, col = "tomato",
             linewidth = 1.5) +
  annotate("text", label = paste(round( mean(bweight$tezina) ), "g"),
                                 x = 4200, y = 4e5, size = 8, col = "#F7F8F9") +
  scale_x_continuous(breaks = c(2000, 3000, 4000, 5000)) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs(x = "Težina u gramima", y = "")
```

$$ \bar x = \frac{\sum_{i=1}^{n}x_i}{n} = \frac{x_1 + x_2 + ... + x_n}{n} $$ 

::: {.notes}
Ako koristimo aritmetičku sredinu kao opis podataka prosečna greska će biti nula, međutim svaka individualna procena će i dalje imati neku grešku!
:::

## Karakteristike artimetičke sredine

Aritmetička sredina ima prosečnu grešku od [nula]{.yellow}:

$$ \text{prosečna greška} = \frac{1}{n}\sum_{i = n}^n  (x_i - \bar x) = 0  $$

Aritmetička sredina ima [najmanju]{.yellow} moguću prosečnu kvadratnu grešku:

$$ \text{prosečna kvadratna greška} = \frac{1}{n}\sum_{i = n}^n (x_i - \bar x )^2 $$

## Zbir kvadrata greške aritmetičke sredine je najmanji

```{r}
#| fig-asp: 0.618
#| fig-align: "center"

set.seed(123)
sse_data <- rnorm(300, mean = 3480, sd = 2)
mean_estimates <- seq(3480-2, 3480+2, by = 0.01)

sse <- sapply(mean_estimates, function(m) sum((sse_data - m)^2))

plot_data <- data.frame(mean_estimate = mean_estimates, 
                        SSE = sse)

ggplot(plot_data, aes(x = mean_estimate, y = SSE)) +
  geom_line(color = "#F4BA02", linewidth = 1.5) +
  geom_vline(xintercept = mean(sse_data), 
             linetype = "dashed", color = "#F7F8F9", linewidth = 1.5) +
  annotate("text", x = mean(sse_data) + 0.2, y = min(sse) + 700, 
           label = "bar(x)", 
           color = "#F7F8F9", size = 8,
           parse = TRUE) +
  scale_x_continuous(labels = scales::label_number(suffix = " g")) +
  labs(x = "Pokušaj opisa podataka (aritmetička sredina)",
       y = "Zbir kvadratnog odstupanja") +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue()

```


::: {.notes}
It turns out that if we use the arithmetic mean as our estimator then the average error will indeed be zero (see the simple proof at the end of the chapter if you are interested). Even though the average of errors from the mean is zero, each individual still has some degree of error; some are positive and some are negative, and those cancel each other out to give an average error of zero.
:::

## Aritmetička sredina za grupisane podatke {.smaller}

```{r}
set.seed(123)

hg <- tribble(
  ~Hemoglobin, ~n, ~`arit. sred. intervala`,
  "106-110", 3, 108,
  "111-115", 7, 113,
  "116-120", 11, 118,
  "121-125", 16, 123,
  "126-130", 9, 128,
  "131-135", 4, 133
) %>% 
  mutate(rezultat = n * `arit. sred. intervala`)

tt(hg) %>% style_tt(fontsize = 0.9)

hg %>% 
  summarise(`Ukupno n` = sum(n), `Ukupno rezultat` = sum(rezultat)) %>% 
  tt()

```

$$ \bar x = \frac{6065}{50} = 121.3 \; \text{g/L}$$

## Aritmetička sredina aritmetičkih sredina {.smaller}

```{r}
bmi_skole <- tribble(
  ~`Škola`, ~`Broj učenika`, ~BMI,
  "A", 255, 22.7,
  "B", 307, 19.4,
  "C", 511, 20.9)

tt(bmi_skole)
```

::: {.fragment}

$$ \bar x = \frac{\text{broj učenika}_{škola} \times \text{BMI}_{škola}}{\text{ukupno učenika}_{škola}} = $$ 

:::

::: {.fragment}

$$ \overline{BMI} = \frac{225 \times 22.7 + 307 \times 19.4 + 511 \times 20.9}{255 + 307 + 511} = 21.1 $$
:::

## Prednosti i mane aritmetičke sredine

- Predstavlja sve vrednosti
- Jednostavna
- Ne može da se koristi sa kategorijalnim podacima
- Ekstremne vrednosti značajno utiču

## Ekstremne vrednosti

::: {.r-stack}

```{r}
#| fig-asp: 0.618
#| fig-width: 12
#| fig-align: "center"


salary <- tibble(salary = c(rnorm(1000, 80000, 10000), rep(1e6, 10)))

ggplot(salary, aes( x = salary)) +
  geom_histogram(fill = "#F4BA02", col = "#F7F8F9", bins = 80) + 
  geom_vline(xintercept = mean(salary$salary), linewidth = 2, linetype = 2,
             col = "tomato") +
  scale_x_continuous(label = scales::label_number(suffix = " RSD")) +
  annotate("text", label = "88,903 RSD\n(80,000 RSD)", x = 300000, y = 100,
           size = 8, col = "#F7F8F9") +
  # theme(axis.text.y = element_blank()) +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue() +
  labs(x = "Neto zarada", y = "Broj")
```

::: {.fragment}

```{r}
#| fig-asp: 0.618
#| fig-align: "center"
#| fig-width: 12

ggplot(salary, aes( x = salary)) +
  geom_histogram(fill = "#F4BA02", col = "#F7F8F9", bins = 80) +
  geom_vline(xintercept = median(salary$salary), linewidth = 2, linetype = 2,
             col = "tomato") +
  scale_x_continuous(label = scales::label_number(suffix = " RSD")) +
  annotate("text", label = "Medijana = 79,765 RSD\n(80,000 RSD)", x = 450000, y = 100,
           size = 8, col = "#F7F8F9") +
  # theme(axis.text.y = element_blank()) +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue() +
  labs(x = "Neto zarada", y = "Broj")
```

:::

:::

## Robustna medijana

- Manje osetljiva na ekstremne vrednosti (outlier)
- Otkriva srednju poziciju
- Manje pogodna za analizu
- Ignoriše uticaj vrednosti

## Računanje medijane (1)

Sirovi podaci:

$$ 8,6,3,14,12,7,6,4,9 $$ 

Poređani:

$$ 3,4,6,6,7,8,9,12,14 $$

Formula za poziciju medijane:

$$ me_p = \frac{n+1}{2} = \frac{10}{2} = 5 \; (\text{pozicija})$$

::: {.notes}
Whereas the mean minimizes the sum of squared errors, the median minimizes a slighty different quantity: The sum of the absolute value of errors. Less sensitive to outliers – squaring is going to exacerbate the effect of large errors compared to taking the absolute value.
:::

## Računanje medijane (2)

Ako imamo [neparanu]{.yellow} seriju podataka:

$$ 1,4,8 $$
Za [parnu]{.yellow} seriju podataka uzima se srednja vrednost između dve centralne vrednosti:

$$ 1,4,8, 10 $$ 
$$ me = \frac{4+8}{2} = 6 $$

<!-- ## Zašto uvek ne koristimo medijanu? -->

<!-- ::: {.callout-note} -->
<!-- Zašto bismo onda ikad koristili aritmetičku sredinu? Aritmetička sredina varira manje od uzorka do uzroka od ostalih ocena (predstavnika) podataka. Na nama je da odlučimo da li je to vredno veće osetljivosti na ekstremne vrednosti. -->
<!-- ::: -->

## Iskošene distribucije

![](slike/skew.png)

## Prednost i mane mera centralne tendencije

```{r}
data.frame(
  Kontekst = c(
    "Numerički podaci bez ekstremnih vrednosti",
    "Numerički + ekstremne vrednosti",
    "Ordinalni",
    "Ordinalni, $\\lt3$ kategorije",
    "Nominalni"),
  Mera = c("Aritmetička sredina", "Medijana", "Medijana", "Mod", "Mod"),
  check.names = FALSE) %>%
  tt()
```

## Koliko je retka težina od 2.91 kg?

::: {.r-stack}

```{r}
#| fig-asp: 0.65


ggplot(bweight, aes( x = tezina )) +
  geom_histogram(binwidth = 500, color = "#F7F8F9", fill = "#F4BA02",
                 aes(y = after_stat(density))) +
  stat_function(fun = dnorm, 
                args = list(mean = 3480, sd = 462), 
                color = "#F7F8F9", size = 1.5,
                xlim = c(3480-4*462, 3480+4*462)) +
  geom_vline(xintercept = 2910, linetype = 2, col = "#F7F8F9",
             linewidth = 1.5, alpha = 0.5) +
  scale_x_continuous(breaks = c(2000, 3000, 4000, 5000)) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs(x = "Težina u gramima", y = "")
```

::: {.fragment}

```{r}
#| fig-asp: 0.65


ggplot(bweight, aes( x = tezina )) +
  geom_histogram(binwidth = 500, color = NA, fill = NA,
                 aes(y = after_stat(density))) +
  stat_function(fun = dnorm, 
                args = list(mean = 3480, sd = 462), 
                color = "#F7F8F9", size = 1.5,
                xlim = c(3480-4*462, 3480+4*462)) +
  geom_vline(xintercept = 2910, linetype = 2, col = "#F7F8F9",
             linewidth = 1.5, alpha = 0.5) +
  scale_x_continuous(breaks = c(2000, 3000, 4000, 5000)) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs(x = "Težina u gramima", y = "")
```

:::

::: {.fragment}

```{r}
#| fig-asp: 0.65

labels <- c("1%", "5%", "25%", "50%", "75%", "95%", "99%")
quintiles <- quantile(bweight$tezina, probs = c(0.01, 0.05, 0.25, 0.5, 0.75, 0.95, 0.99))
y_quintiles <- dnorm(quintiles, mean = 3480, sd = 462)

ggplot(bweight, aes( x = tezina )) +
  geom_histogram(binwidth = 500, color = NA, fill = NA,
                 aes(y = after_stat(density))) +
  geom_vline(xintercept = 2910, linetype = 2, col = "#F7F8F9",
             linewidth = 1.5, alpha = 0.5) +
  annotate("segment", 
           x = quintiles, 
           xend = quintiles,
           y = 0, yend = y_quintiles, size = 1, linetype = 1, color = "#F7F8F9") +
  annotate("text", label = labels, col = "#F7F8F9",
           x = quintiles, y = y_quintiles + 0.00016,
           hjust = +0.4) +
  stat_function(fun = dnorm, 
                args = list(mean = 3480, sd = 462), 
                color = "#F7F8F9", size = 1.5,
                xlim = c(3480-4*462, 3480+4*462)) +
  scale_x_continuous(breaks = c(2000, 3000, 4000, 5000)) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs(x = "Težina u gramima", y = "")
```

:::

:::

::: {.notes}
Perhaps the most crucial lesson from this example is that the dark-grey shaded area in Figure plays two roles:
- It represents the proportion of this population of babies being low birth weight.
- It is also the probability that a randomly chosen baby in 2013.

So a population can be thought of as a physical group of individuals, but also as providing the probability distribution for a random observation. This dual interpretation will be fundamental when we come to more formal statistical inference.
:::

# Mere varijabiliteta

## Mudrost većine

:::: columns

::: {.column}
915 ljudi je pokušalo da pogodi koliko ima slatkiša u tegli.

Kako da okarakterišemo [varijaciju]{.yellow} pogodaka?

:::

::: {.column}
![](slike/beans.png){width="75%"}
:::

::::

## Prikazivanje varijabiliteta

```{r}
#| fig-asp: 0.618
#| fig-align: "center"

bean <- read.csv(file = here::here("slides", "03_centralne_mere", "data", "bean.csv")) %>% 
  rename( guess = X219)

fig_3 <- bean %>% 
  ggplot(aes( x = guess )) +
  geom_histogram(fill = "orange", col = "black") +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        axis.title.y = element_blank()) +
  labs(x = "Procenjen broj slatkiša")

fig_2 <- bean %>% 
  ggplot(aes( x = guess )) +
  geom_boxplot(fill = "orange") +
  theme_minimal() +
  theme(axis.text = element_blank(),
        axis.title = element_blank())

fig_1 <- bean %>%
  ggplot(aes( x = guess )) +
  geom_dotplot(binwidth = 200, stackdir = "center",
               fill = "orange") +
  theme_minimal() +
  theme(axis.text = element_blank(),
        axis.title = element_blank())

fig_1 / fig_2 / fig_3 + plot_annotation(tag_levels = 'A')
```


## Definicija mera varijabiliteta {.center}

::: r-fit-text
Mere varijabiliteta opisuju [variranje]{.yellow}

vrednosti skupa podataka oko srednje vrednosti.
:::

## Podela mera varijabiliteta

:::: columns

::: {.column}
**Apsolutne**:

- Interval (raspon) varijacije
- Kvantil (percentil, decil, kvartil)
- Srednje apsolutno odstupanje
- Varijansa
- Standardna devijacija
:::

::: {.column}
**Relativne**:

- Koeficijent varijacije
- Standardizovane (normalizovane) vrednosti
:::

::::

## Inverval varijacije

Koliko variraju vrednosti od najmanje do najveće?

$$ I = x_{max} - x_{min} = 31337 - 244 = 31093 \; \; \text{opseg pogodaka} $$
```{r}
#| fig-asp: 0.618
#| fig-align: "center"

fig_1 + theme_blue_void()
```

<!-- ## Kvantili -->

<!-- Dele podatke u jednak broj grupa. -->

<!-- :::: {.r-stack} -->

<!-- ```{r} -->
<!-- N <- 100 -->
<!-- quantile <- tibble( x = 1:N , y = 1) -->
<!-- quantile %>%  -->
<!--   ggplot(aes( x = x , y = y)) + -->
<!--   geom_point(size = 1 , color = "#F4BA02") + -->
<!--   theme_blue_void() -->
<!-- ``` -->

<!-- ::: {.fragment} -->

<!-- ```{r} -->
<!-- quantile <- tibble( x = 1:N , y = 1) -->
<!-- quantile %>%  -->
<!--   ggplot(aes( x = x , y = y)) + -->
<!--   geom_point(size = 1 , color = "#F4BA02") + -->
<!--   geom_vline(xintercept = N/2, linewidth = 1, linetype = 2, color = "#F7F8F9") + -->
<!--   annotate("text", label = "paste(bold(medijana), \", 50. percentil\")",  -->
<!--            x = N/2 + 30, y = 1.5, parse = TRUE, size = 7, color = "#F7F8F9") + -->
<!--   theme_blue_void() + -->
<!--   ylim(0, 2) -->
<!-- ``` -->

<!-- ::: -->

<!-- ::: {.fragment} -->

<!-- ```{r} -->
<!-- quantile <- tibble( x = 1:N , y = 1) -->
<!-- quantile %>%  -->
<!--   ggplot(aes( x = x , y = y)) + -->
<!--   geom_point(size = 1 , color = "#F4BA02") + -->
<!--   annotate("segment", x = 1.25:N+0.25, y = 0.8, yend = 1.2, size = 0.5,  -->
<!--            linetype = 2, color = "#F7F8F9") + -->
<!--   annotate("text", label = "Percentili",  -->
<!--            x = 15, y = 1.5, parse = TRUE, size = 7, color = "#F7F8F9") + -->
<!--   theme_blue_void() + -->
<!--   ylim(0, 2) -->
<!-- ``` -->

<!-- ::: -->

<!-- :::: -->

## Kvantili

![](slike/quant.png){fig-align="center"}

## Tablica očekivanog rasta

![](slike/growth.jpg){width=50% fig-align="center"}

## Grafikon kutije (Box-and-Whisker Plot)

```{r}
#| fig-asp: 0.618
#| fig-align: "center"

tibble(
  data = c(rnorm(50, 10, 2), rnorm(50, 20, 5), rpois(50, 7)),
  group = c(rep("Grupa I", 50), rep("Grupa II", 50), rep("Grupa III", 50))
) %>% 
  ggplot(aes(x = data, y = factor(group), fill = group)) +
  geom_boxplot(col = "#F7F8F9") +
  labs(x = "Starost", y = "") +
  scale_x_continuous(breaks = scales::breaks_pretty()) +
  ggdist::theme_ggdist(base_size = 18) +
  theme_blue() +
  theme(legend.position = "none")
```

## Definicija varijanse

Varijansa je srednje kvadratno odstupanje od aritmetičke sredine:

$$ \text{Var} = \frac{\sum(x-\bar x)^2}{n - 1} \; \text{grama}^2 $$

## Standardna devijacija

```{r}
ggplot() +
  geom_vline(xintercept = 10, linetype = 2, col = "white", linewidth = 2) +
  stat_function(
    fun = dnorm,
    args = list(mean = 10, sd = 2),
    xlim = c(10-3*2, 10+3*2),
    col = "#F4BA02",
    linewidth = 2
  ) +
  stat_function(
    fun = dnorm,
    args = list(mean = 10, sd = 10),
    xlim = c(10-3*10, 10+3*10),
    col = "tomato",
    linewidth = 2
  ) +
  annotate("text", label = paste("sd = ", 2),
           x = 20, y = 0.18, col = "#F4BA02", size = 8) +
  annotate("text", label = paste("sd = ", 10),
           x = -2, y = 0.05, col = "tomato", size = 8) +
  scale_x_continuous(breaks = scales::breaks_pretty()) +
  ggdist::theme_ggdist(base_size = 18) +
  theme(axis.text.y = element_blank()) +
  theme_blue() +
  labs( x = "", y = "")
```

## Definicija standardne devijacije

Standardna devijacija je kvadratni koren iz srednjeg kvadratnog odstupanja od aritmetičke sredine:

$$ \text{Var} = sd^{2} = \frac{\sum(x-\bar x)^2}{n - 1} \; \text{grama}^{2} $$
$$ sd = \sqrt{\frac{\sum(x-\bar x)^2}{n - 1} \; } \text{grama} $$

## Sumirani pokušaji pogodaka

:::: columns

::: {.column}

```{r}

getmode <- function(v) {
   uniqv <- unique(v)
   uniqv[which.max(tabulate(match(v, uniqv)))]
}

bean %>% 
  summarise(`Aritmetička sredina` = round(mean(guess)),
            Medijana = round(median(guess)),
            Mod = getmode(guess),
            Opseg = paste(round(min(guess)), " - ", round(max(guess))),
            `Interkvartilni opseg` = paste(round(quantile(guess, 1/4)), " - ", 
                                           round(quantile(guess, 3/4))),
            `Standardna devijacija` = round(sd(guess))) %>%
   sjmisc::rotate_df(rn = "Mera") %>% rename("Svi podaci" = V1) %>% 
  tt() %>% style_tt(fontsize = 0.75)
```

::: {.fragment}
Tačan broj je [1616]{.yellow}.
:::

:::

::: {.column}
![](slike/beans.png){width="75%"}
:::

::::

::: {.notes}
1. Opseg je osetljiv na ekstremne vrednosti, bizaran pokusaj od 31000.
2. IQR nije osetljiv na ekstremne vrednosti. Pokazuje centralnu polovinu.
3. SD je podlozna ekstremnim vrednostima, najbolja za simetricne podatke.
4. Medijana je najbolja.
5. Mod je podlozan zaokruzivanju.
6. Desno-iskosena pa artmeticka sredina nije pogodna.
:::

## Koeficijent varijacije

Je korisna mera kada se porede varijacije između dva uzorka.

$$ CV = \frac{sd}{\bar x} \times {100\%} $$
$\le 30\%$ homogeni podaci.

$\gt 30\%$ heterogeni podaci.

::: {.callout-important}
Koeficijent varijacije se izražava u procentima!
:::

::: {.notes}
The coefficient of variation should be computed only for data measured on scales that have a meaningful zero (ratio scale) and hence allow relative comparison of two measurements (i.e., division of one measurement by the other). The coefficient of variation may not have any meaning for data on an interval scale.
:::

## Homogeni i heterogeni podaci

```{r}
#| fig-align: "center"
#| fig-asp: 0.618


ggplot() +
  stat_function(
    fun = dnorm,
    args = list(mean = 10, sd = 2),
    xlim = c(10-3*2, 10+3*2),
    col = "#F4BA02",
    linewidth = 2
  ) +
  stat_function(
    fun = dnorm,
    args = list(mean = 10, sd = 10),
    xlim = c(10-3*10, 10+3*10),
    col = "tomato",
    linewidth = 2
  ) +
  annotate("text", label = paste("CV = ", 2/10*100, "%"),
           x = 20, y = 0.18, col = "#F4BA02", size = 8) +
  annotate("text", label = paste("CV = ", 10/10*100, "%"),
           x = -2.5, y = 0.05, col = "tomato", size = 8) +
  theme_blue_void()
```


## Z-vrednost {.center}

Koliko je *standardnih devijacija* podatak udaljen od artmetičke sredine?

$$ z = \frac{x_i - \bar x}{sd} $$

## Zadaci

1. Učitati bazu podataka: [zadovoljstvo zdravstvenom zaštitom.xlsx]{.yellow}
2. Za varijablu [starost]{.yellow} izračunati [mere centralne tendencije]{.yellow}
    + Aritmetičku sredinu, standardnu devijaciju, koef. varijacije
    + Mod
    + Interval varijacije
3. Izračunati [mere centralne tendencije]{.yellow} za [starost]{.yellow} grupisane [po polu]{.yellow}

## Struktura kursa

```{r}
teme <- c(
  "Uvod u medicinsku statistiku", "Sređivanje podataka",
  "Statističko opisivanje podataka", "Verovatnoća i raspodele verovatnoća",
  "Populacija i uzorak", "Testiranje hipoteza o populacionim prosečnim vrednostima i proporcijama",
  "Testiranje hipoteza o učestalostima", "Testiranje hipoteza o rangovima", "Korelacija",
  "Regresija / Kolokvijum", "Podaci, informacije i znanje", "Zdravstveni informacioni sistem",
  "Mere dijagnostičke tačnosti", "Medicinsko odlučivanje", "Bioinformatika"
)

kurs <- tibble(Nedelja = 1:15, Tema = teme)
tt(kurs) |> style_tt(j = 1:2, fontsize = 0.55)
```

